{"version":3,"file":"static/js/1495.48524226.chunk.js","mappings":"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","sources":["views/dashboard/Pagination.js","views/dashboard/DashboardTree.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { CButtonToolbar, CButtonGroup, CButton, CSpinner} from '@coreui/react'\r\n\r\nconst Pagination = (props) => {\r\nconst [pager, setPager] = useState({});\r\nconst [initialPage, setInitialPage] = useState(1);\r\nconst [pageSize, setPageSize] = useState();\r\n\r\nuseEffect(() => {\r\nif (props.items && props.items.length) {\r\n  setPage(initialPage);\r\n  setPageSize(props.pageSize);\r\n}\r\n}, [props.items, initialPage, props.pageSize]);\r\n\r\nuseEffect(() => {\r\n  console.log(props);    \r\n  if (props.items) {\r\n    setPage(initialPage);\r\n  }\r\n}, [props.items, initialPage]);\r\n\r\nconst setPage = (page) => {\r\n    console.log(page);\r\n    let { items, pageSize } = props;\r\n    let newPager = pager;\r\n\r\n    newPager = getPager(items.length, page, pageSize);\r\n\r\n    let pageOfItems = items.slice(newPager.startIndex, newPager.endIndex + 1);\r\n    console.log(\"newPager\");\r\n    console.log(newPager);\r\n    console.log(newPager.startIndex);\r\n    console.log(newPager.endIndex);\r\n    console.log(pageOfItems);\r\n    setPager(newPager);\r\n    props.onChangePage(pageOfItems,newPager.startIndex + 1,newPager.endIndex + 1);\r\n};\r\n\r\n  const getPager = (totalItems, currentPage, pageSize) => {\r\n  currentPage = currentPage || 1;\r\n  pageSize = pageSize || 10;\r\n\r\n  let totalPages = Math.ceil(totalItems / pageSize);\r\n  let startPage, endPage;\r\n  if (totalPages <= 5) {\r\n    startPage = 1;\r\n    endPage = totalPages;\r\n  } else {\r\n    if (currentPage <= 3) {\r\n      startPage = 1;\r\n      endPage = 5;\r\n    } else if (currentPage + 2 >= totalPages) {\r\n      startPage = totalPages - 4;\r\n      endPage = totalPages;\r\n    } else {\r\n      startPage = currentPage - 2;\r\n      endPage = currentPage + 2;\r\n    }\r\n  }\r\n\r\n  let startIndex = (currentPage - 1) * pageSize;\r\n  let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n  let pages = [...Array(endPage + 1 - startPage).keys()].map(i => startPage + i);\r\n\r\n  return {\r\n    totalItems: totalItems,\r\n    currentPage: currentPage,\r\n    pageSize: pageSize,\r\n    totalPages: totalPages,\r\n    startPage: startPage,\r\n    endPage: endPage,\r\n    startIndex: startIndex,\r\n    endIndex: endIndex,\r\n    pages: pages\r\n  };\r\n  };\r\n\r\n  if (!pager.pages || pager.pages.length <= 1) {\r\n  return null;\r\n  }\r\n\r\nreturn (\r\n  <>\r\n    <CButtonToolbar role=\"group\" aria-label=\"Toolbar with button groups\">\r\n    <CButtonGroup className=\"me-2\" role=\"group\" aria-label=\"First group\">\r\n      <CButton color=\"primary\" disabled={pager.currentPage === 1} onClick={() => setPage(pager.currentPage - 1)}>Previous</CButton>\r\n    </CButtonGroup>    \r\n    <CButtonGroup className=\"me-2\" role=\"group\" aria-label=\"First group\">\r\n      {pager.pages.map((page, index) => (\r\n        <CButton color=\"primary\" key={index} className={pager.currentPage === page ? \"classhover active\" : \"classhover\"} onClick={() => setPage(page)}>{page}</CButton>\r\n      ))}    \r\n    </CButtonGroup>\r\n    <CButtonGroup className=\"me-2\" role=\"group\" aria-label=\"First group\">\r\n      <CButton color=\"primary\" disabled={pager.currentPage === pager.totalPages} onClick={() => setPage(pager.currentPage + 1)}>Next</CButton>\r\n    </CButtonGroup>        \r\n    </CButtonToolbar>\r\n</>\r\n);\r\n};\r\n\r\nexport default Pagination;","import React,{useState,useEffect} from 'react'\r\nimport { CCard, CCardBody, CCol, CCardHeader, CRow,CSpinner } from '@coreui/react'\r\nimport Tree from 'react-d3-tree'\r\nimport { useCenteredTree } from \"./helpers/Helpers\"\r\nimport './style.css';\r\nimport {fitWrappedText} from 'canvas-text-wrapper';\r\nimport { Tooltip } from 'react-tooltip';\r\nimport \"react-tooltip/dist/react-tooltip.css\";\r\nimport treedata from './tree2.json'\r\nimport treedata2 from './tree2.json'\r\nimport axios from 'axios'\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst DashTree = () => {\r\n    const [data, setData] = useState({\"name\": \"roots\",\"id\": \"R0001\",\"type\": \"step1\",\"children\": []});\r\n    const [datas, setDatas] = useState(treedata);    \r\n    const [start, setStart] = useState(0); \r\n    const [end, setEnd] = useState(40);\r\n    const [tooltip, setTooltipVisible] = useState(false);\r\n    const [dimensions, translate, containerRef] = useCenteredTree();    \r\n    let [loadingSpinner, setLoadingSpinner] = useState(true);\r\n    let id = 0;\r\n    const onChangePage = (pageOfItems,startIndex,endIndex) => {\r\n      console.log(\"onchange\");\r\n      console.log(startIndex);\r\n      console.log(endIndex);\r\n      setStart(endIndex);\r\n      setEnd(startIndex + endIndex);\r\n    \r\n      console.log(start);\r\n      console.log(end);\r\n      setLoadingSpinner(true);\r\n      console.log(loadingSpinner);\r\n      setData({\"name\": \"roots\",\"gid\": \"R0001\",\"itemtype\": \"step1\",\"children\": pageOfItems})              \r\n      setLoadingSpinner(false);\r\n      console.log(loadingSpinner);\r\n      };    \r\n    const renderRectSvgNode = ({ nodeDatum, toggleNode }) => {\r\n        let shortText = nodeDatum['name'].substring(0, 45);\r\n        let firstLine = shortText.substring(0, 30);\r\n        let secondLine = shortText.substring(30, 50);\r\n        let secondData = '';\r\n        let backgroundColor = '';\r\n        if(nodeDatum['itemtype'] === \"step1\"){\r\n          backgroundColor = \"#fd7e14\";\r\n        }\r\n        else if(nodeDatum['itemtype'] === \"step2\"){\r\n          backgroundColor = \"#0dcaf0\";\r\n        }\r\n        else if(nodeDatum['itemtype'] === \"step3\"){\r\n          backgroundColor = \"#198754\";\r\n        }\r\n        else if(nodeDatum['itemtype'] === \"step4\"){\r\n          backgroundColor = \"#dc3545\";\r\n        }\r\n        else {\r\n          backgroundColor = \"#141517\";\r\n        }                        \r\n        if(secondLine === ''){\r\n          secondData = '';\r\n        }\r\n        else{\r\n          secondData = secondLine + '...';\r\n        }\r\n        shortText = shortText + '...'\r\n        let type = nodeDatum.itemtype;\r\n        let svg_id = \"svg_id\"+id;\r\n        return (\r\n          <>\r\n          <g id={svg_id} transform=\"translate(-536 -571)\"  onClick={toggleNode}>\r\n          <g id=\"Group_5599\" data-name=\"Group 5599\" transform=\"translate(-5 7)\">\r\n            <g width=\"230\" id=\"Rectangle_3512\" data-name=\"Rectangle 3512\" transform=\"translate(541 520)\" fill={backgroundColor} stroke={backgroundColor} stroke-width=\"2\">\r\n              <rect width=\"200\" height=\"94\" rx=\"13\" stroke=\"none\"/>\r\n              <rect x=\"1\" y=\"1\" width=\"200\" height=\"92\" rx=\"12\" fill=\"none\"/>\r\n            </g>\r\n            <line id=\"Line_329\" data-name=\"Line 329\" x2=\"200\" transform=\"translate(542.5 554.5)\" fill=\"none\" stroke={backgroundColor} stroke-width=\"2\"/>\r\n          </g>\r\n          <text id=\"Dasboard\" strokeWidth=\"0\" transform=\"translate(704 608)\" fill=\"#1993e6\" font-size=\"10\" font-family=\"'Rubik', sans-serif\"><tspan x=\"-30\" y=\"0\" stroke='white' onMouseOver={(e) => handleMouseOver(nodeDatum.name,svg_id,event)} onMouseOut={() => handleMouseOut(svg_id)} >Read more</tspan></text>\r\n          <a href=\"https://google.com\" style={{\"text-decoration\": \"none\"}} target=\"_blank\"><text id=\"Dasboard-2\" strokeWidth=\"0\" data-name=\"Dasboard\" transform=\"translate(622 553)\" fill=\"#fff\" font-size=\"21\" font-family=\"'Rubik', sans-serif\"><tspan x=\"-30\" y=\"0\" stroke='white'> {nodeDatum['gid']}</tspan></text></a>\r\n          <text id=\"\" strokeWidth=\"0\" transform=\"translate(546 571)\" fill=\"#fff\" font-size=\"15\" font-family=\"'Rubik', sans-serif\"><tspan x=\"0\" y=\"14\" stroke='white'>{firstLine}</tspan><tspan x=\"0\" y=\"36\">{secondData}</tspan></text>\r\n          </g>          \r\n          {id++}\r\n          </>       \r\n        );\r\n      }\r\n      const styles = {\r\n        nodes: {\r\n          node: {\r\n            shape: 'rect',\r\n            shapeProps: {\r\n              width: 200,\r\n              height: 50,\r\n              x: -100,\r\n              y: -25\r\n            },\r\n            textBlock: {\r\n              dy: -20\r\n            }\r\n          }\r\n        }\r\n      }  \r\n      const handleMouseOver = (input,id,event) => {\r\n        console.log(input);\r\n        console.log(id);\r\n        setTooltipVisible(true);\r\n        var myicon = document.getElementById(id);\r\n        var mypopup = document.getElementById(\"mypopup\");    \r\n        var iconPos = myicon.getBoundingClientRect();\r\n        mypopup.style.left = event.clientX + 20 + \"px\";\r\n        mypopup.style.top = event.clientY + 20 + \"px\";\r\n        mypopup.style.display = \"block\";    \r\n        document.getElementById(\"svg_content\").innerText = input;\r\n      };\r\n      \r\n      const handleMouseOut = (id) => {\r\n        var myicon = document.getElementById(id);\r\n        var mypopup = document.getElementById(\"mypopup\");    \r\n        mypopup.style.display = \"none\";    \r\n        setTooltipVisible(false);\r\n      };\r\n      const svgSquare = {\r\n        shape: 'rect',\r\n        shapeProps: {\r\n          width: 0,\r\n          height: 0,\r\n        }\r\n      }\r\n      function handleLoadMore() {\r\n          \r\n        let children = datas.children.slice(start,end);\r\n        console.log(children);\r\n        const child = children[start];\r\n        setStart(end);\r\n        setEnd(end + 40);\r\n      \r\n        console.log(start);\r\n        console.log(end);\r\n        setData({\"name\": \"roots\",\"gid\": \"R0001\",\"itemtype\": \"step1\",\"children\": children})        \r\n        setLoadingSpinner(false);\r\n      }\r\n      useEffect(() => {\r\n        handleLoadMore();\r\n      }, []);    \r\n              \r\n    return (\r\n      <>\r\n        <CRow>\r\n          <CCol xs={12} style={{\"height\":\"600px\"}}>\r\n          {\r\n            loadingSpinner ? (\r\n              <CSpinner component=\"span\" size=\"sm\" aria-hidden=\"false\"/>\r\n            ) : (\r\n              <Tree \r\n            data={data} \r\n            dimensions={dimensions}\r\n            renderCustomNodeElement={renderRectSvgNode}\r\n            orientation=\"horizontal\"        \r\n            styles={styles}       \r\n            childrenKey=\"children\"  \r\n            nodeSvgShape={svgSquare}\r\n            pathFunc=\"step\"\r\n            zoom={0.5}       \r\n            translate={translate}\r\n            nodeSize={{\r\n              x: 540,\r\n              y: 100\r\n            }}\r\n            separation={{\r\n              siblings: 2,\r\n              nonSiblings: 4\r\n            }}                          \r\n          />              \r\n            )\r\n          }\r\n            <div id=\"mypopup\">\r\n              <p id=\"svg_content\"></p>\r\n            </div>        \r\n          </CCol>\r\n          <CCol xs={6}>\r\n            \r\n          </CCol>\r\n          <CCol xs={6}>\r\n{/*            <button className='btn btn-primary' onClick={(e)=>handleLoadMore()}>Load Next Data</button>    */}\r\n            <Pagination\r\n             pageSize={40}\r\n             items={treedata['children']}\r\n             onChangePage={onChangePage}\r\n             />            \r\n        </CCol>\r\n        </CRow>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default DashTree\r\n"],"names":["props","useState","pager","setPager","initialPage","setPageSize","useEffect","items","length","setPage","pageSize","console","log","page","newPager","getPager","pageOfItems","slice","startIndex","endIndex","onChangePage","totalItems","currentPage","startPage","endPage","totalPages","Math","ceil","min","pages","Array","keys","map","i","role","className","color","disabled","onClick","index","data","setData","treedata","datas","start","setStart","end","setEnd","setTooltipVisible","useCenteredTree","dimensions","translate","loadingSpinner","setLoadingSpinner","id","handleMouseOver","input","event","myicon","document","getElementById","mypopup","getBoundingClientRect","style","left","clientX","top","clientY","display","innerText","handleMouseOut","children","handleLoadMore","xs","component","size","renderCustomNodeElement","nodeDatum","toggleNode","shortText","substring","firstLine","secondLine","secondData","backgroundColor","itemtype","svg_id","transform","width","fill","stroke","height","rx","x","y","x2","strokeWidth","onMouseOver","e","name","onMouseOut","href","target","orientation","styles","nodes","node","shape","shapeProps","textBlock","dy","childrenKey","nodeSvgShape","pathFunc","zoom","nodeSize","separation","siblings","nonSiblings"],"sourceRoot":""}