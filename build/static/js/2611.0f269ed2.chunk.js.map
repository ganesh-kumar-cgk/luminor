{"version":3,"file":"static/js/2611.0f269ed2.chunk.js","mappings":"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","sources":["views/dashboard/DataTable.js","views/dashboard/Dashboard.js","views/widgets/WidgetsDropdown.js"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.css\";\r\nimport React from \"react\";\r\nimport { Col, Row, Table,Button } from \"react-bootstrap\";\r\nimport {\r\n  DatatableWrapper,\r\n  useDatatableWrapper,\r\n  Filter,\r\n  Pagination,\r\n  PaginationOptions,\r\n  TableBody,\r\n  TableHeader\r\n} from \"react-bs-datatable\";\r\n\r\nimport TABLE_BODY from \"./json/TableData.json\";\r\n\r\nconst STORY_HEADERS = [\r\n  {\r\n    prop: \"id\",\r\n    title: \"ID\",\r\n    isFilterable: true\r\n  },\r\n  {\r\n    prop: \"title\",\r\n    title: \"Requirements Description\",\r\n    isFilterable: true\r\n  },\r\n  {\r\n    prop: \"ome\",\r\n    title: \"OEM Status\",\r\n    isFilterable: true    \r\n  },\r\n  {\r\n    prop: \"status\",\r\n    title: \"Status\",\r\n    cell: (row) => {\r\n        if (row.status === \"processed\") {\r\n          return (\r\n            <Button\r\n              variant=\"outline-primary\"\r\n              size=\"sm\"\r\n              style={{\"color\" : \"white\",\"backgroundColor\" : \"#4049be\",\"borderColor\":\"#4049be\"}}\r\n            >\r\n              {row.status}\r\n            </Button>        \r\n          );\r\n        } else if(row.status === \"Progress\"){\r\n          return (\r\n            <Button\r\n              variant=\"outline-primary\"\r\n              size=\"sm\"\r\n              style={{\"color\" : \"white\",\"background\" : \"#be4087\",\"borderColor\":\"#be4087\"}}\r\n            >\r\n              {row.status}\r\n            </Button>                    \r\n          )\r\n        } else if(row.status === \"Rejected\"){\r\n            return (\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                size=\"sm\"\r\n                style={{\"color\" : \"white\",\"backgroundColor\":\"#cf1035\",\"borderColor\":\"#cf1035\"}}\r\n              >\r\n                {row.status}\r\n              </Button>                    \r\n            )\r\n          } else if(row.status === \"Success\"){\r\n            return (\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                size=\"sm\"\r\n                style={{\"color\" : \"white\",\"backgroundColor\":\"#23bf2f\",\"borderColor\":\"#23bf2f\"}}\r\n              >\r\n                {row.status}\r\n              </Button>                    \r\n            )\r\n          }\r\n        else{\r\n            return (\r\n                <Button\r\n                  variant=\"outline-primary\"\r\n                  size=\"sm\"\r\n                  style={{\"color\" : \"white\",\"backgroundColor\":\"#23a8bf\",\"borderColor\":\"#23a8bf\"}}\r\n                >\r\n                  {row.status}\r\n                </Button>                    \r\n              )\r\n        }\r\n      },\r\n    isFilterable: true    \r\n  }\r\n];\r\nfunction statusFormatter(cell, row) {\r\n    let backgroundColor = 'lightgray';\r\n    if (cell === 'processed') {\r\n      backgroundColor = 'lightgreen';\r\n    } else if (cell === 'inactive') {\r\n      backgroundColor = 'pink';\r\n    }\r\n  \r\n    return <span style={{ backgroundColor, color: 'white', padding: '5px' }}>{cell}</span>;\r\n  }\r\n\r\nexport default function DataTable() {\r\n  return (\r\n    <DatatableWrapper\r\n      body={TABLE_BODY}\r\n      headers={STORY_HEADERS}\r\n      classes={{\r\n        table: \"table-striped table-hover custom-table\"\r\n      }}\r\n      paginationOptionsProps={{\r\n        initialState: {\r\n          rowsPerPage: 10,\r\n          options: [5, 10, 15, 20]\r\n        }\r\n      }}\r\n    >\r\n\r\n      <Row className=\"mb-4 p-2\">\r\n        <Col\r\n          xs={12}\r\n          lg={4}\r\n          className=\"d-flex flex-col justify-content-start align-items-start\"\r\n        >\r\n          <PaginationOptions />\r\n        </Col>\r\n        <Col\r\n          xs={12}\r\n          sm={6}\r\n          lg={4}\r\n          className=\"d-flex flex-col justify-content-lg-center align-items-center justify-content-sm-start mb-2 mb-sm-0\"\r\n        >\r\n        </Col>\r\n        <Col\r\n          xs={12}\r\n          sm={6}\r\n          lg={4}\r\n          className=\"d-flex flex-col justify-content-end align-items-end\"\r\n        >\r\n          <Filter />\r\n        </Col>\r\n      </Row>\r\n      <Table>\r\n        <TableHeader />\r\n        <TableBody />\r\n      </Table>\r\n      <Row className=\"mb-4 p-2\">\r\n        <Col\r\n          xs={12}\r\n          lg={4}\r\n          className=\"d-flex flex-col justify-content-start align-items-start\"\r\n        >\r\n        </Col>\r\n        <Col\r\n          xs={12}\r\n          sm={6}\r\n          lg={4}\r\n          className=\"d-flex flex-col justify-content-lg-center align-items-center justify-content-sm-start mb-2 mb-sm-0\"\r\n        >\r\n        </Col>\r\n        <Col\r\n          xs={12}\r\n          sm={6}\r\n          lg={4}\r\n          className=\"d-flex flex-col justify-content-end align-items-end\"\r\n        >\r\n          <Pagination />\r\n        </Col>\r\n      </Row>      \r\n    </DatatableWrapper>\r\n  );\r\n}\r\n","import React,{useState,useEffect} from 'react'\nimport { CCard, CCardBody, CCol, CCardHeader, CRow } from '@coreui/react'\nimport './style.css';\nimport {\n  CTable,\n  CTableBody,\n  CTableCaption,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTooltip,\n} from '@coreui/react'\nimport {\n  CChartBar,\n  CChartDoughnut,\n  CChartLine,\n  CChartPie,\n  CChartPolarArea,\n  CChartRadar,\n} from '@coreui/react-chartjs'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport whatsTodaySection from './json/whatstoday.json'\nimport lineChart from './json/LineChart.json'\nimport HorizonatlChart from './json/HorizontalBarChart.json'\nimport VerticalChart from './json/VerticalChart.json';\nimport DataTable from './DataTable';\nimport TableData from './json/TableData.json'\n\nconst Dashboard = () => {\n  let [lineData, setLineData] = useState(lineChart);  \n  let [horizontalBarData, setHorizontalBarData] = useState(HorizonatlChart);  \n  let [whatsToday, setWhatsToday] = useState(whatsTodaySection);  \n  let [verticalBarData, setVerticalBarData] = useState(VerticalChart);  \n\n  useEffect(() => {\n   }, []);    \n  return (\n    <>\n      <WidgetsDropdown data={whatsToday} />\n      <CRow>\n        <CCol xs={12} lg={4} className=\"\">\n          <CCard className=\"mb-4 bg-body\">\n            <CCardHeader>Requirements Complaints Trend</CCardHeader>\n            <CCardBody>\n            <CChartBar\n                height={60}\n                width={100}              \n                data={{\n                  labels: horizontalBarData['labels'],\n                  datasets: horizontalBarData['datasets'],\n                }}\n                labels=\"months\"\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs={12} lg={4} className=\"\">\n          <CCard className=\"mb-4 bg-body\">\n            <CCardHeader>Requirements Traceability Trend</CCardHeader>\n            <CCardBody>\n            <CChartLine \n                height={60}\n                width={100}              \n                data={{\n                  labels: lineData['labels'],\n                  datasets: lineData['datasets'],\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs={12} lg={4} className=\"\">\n          <CCard className=\"mb-4 bg-body\">\n            <CCardHeader>Requirements Stumpline Status</CCardHeader>\n            <CCardBody>\n            <CChartBar\n                height={60}\n                width={100}              \n                data={{\n                  labels: verticalBarData['labels'],\n                  datasets: verticalBarData['datasets'],\n                }}\n                labels=\"months\"\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>              \n      </CRow>\n      <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-4 bg-body\">\n          <CCardHeader>\n              <strong>Requirements Complaints Matrix</strong>\n            </CCardHeader>\n            <CCardBody>\n              <DataTable></DataTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = (props) => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              {props.data['download_count']}{' '}\n              <span className=\"fs-6 fw-normal\">\n                ({props.data['system_requirements_value']}% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title={props.data['system_requirements_label']}\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {props.data['system_test_value']}{' '}\n              <span className=\"fs-6 fw-normal\">\n                ({props.data['system_test_value']}% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title={props.data['system_test_label']}\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {props.data['requirements_value']}{' '}\n              <span className=\"fs-6 fw-normal\">\n                ({props.data['requirements_value']}% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title={props.data['requirements_label']}\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              {props.data['test_value']}{' '}\n              <span className=\"fs-6 fw-normal\">\n                ({props.data['test_value']}% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title={props.data['test_label']}\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n"],"names":["STORY_HEADERS","prop","title","isFilterable","cell","row","status","Button","variant","size","style","DataTable","body","TABLE_BODY","headers","classes","table","paginationOptionsProps","initialState","rowsPerPage","options","Row","className","Col","xs","lg","sm","Table","useState","lineChart","lineData","HorizonatlChart","horizontalBarData","whatsTodaySection","whatsToday","VerticalChart","verticalBarData","useEffect","WidgetsDropdown","data","height","width","labels","datasets","props","color","value","icon","cilArrowBottom","action","alignment","caret","cilOptions","disabled","chart","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","cilArrowTop","fill","barPercentage","drawTicks"],"sourceRoot":""}