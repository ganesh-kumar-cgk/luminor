{"version":3,"file":"static/js/5292.0c722504.chunk.js","mappings":"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","sources":["views/dashboard/DashboardTree.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { CCard, CCardBody, CCol, CCardHeader, CRow } from '@coreui/react'\r\nimport Tree from 'react-d3-tree'\r\nimport { useCenteredTree } from \"./helpers/Helpers\"\r\nimport './style.css';\r\nimport {fitWrappedText} from 'canvas-text-wrapper';\r\nimport { Tooltip } from 'react-tooltip';\r\nimport \"react-tooltip/dist/react-tooltip.css\";\r\nimport treedata from './tree.json'\r\nimport axios from 'axios'\r\n\r\n\r\nconst DashboardTree = () => {\r\n\r\n    const [data, setData] = useState(treedata);\r\n    \r\n//    const [loadedData, setLoadedData] = useState(data.children.slice(0,2))    \r\n    const [loadedData, setLoadedData] = useState(treedata);\r\n\r\n    const handleNodeClicks = (node) => {\r\n        console.log(node);\r\n      loadChildren(node);\r\n    }\r\n    const fetchData = () => {\r\n      axios.get('http://localhost:3001/api', {\r\n        auth: {\r\n          username: 'your-username',\r\n          password: 'your-password'\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });    \r\n    }  \r\n    const loadChildren = (node) => {\r\n    console.log(\"click\");\r\n      if (node.children) {\r\n        setLoadedData(prevData => [...prevData, ...node.children])\r\n      }\r\n    }    \r\n    const [currentDepth, setCurrentDepth] = useState(0);\r\n  let id = 0;\r\n  const [dimensions, translate, containerRef] = useCenteredTree();    \r\n    const svgSquare = {\r\n      shape: 'rect',\r\n      shapeProps: {\r\n        width: 0,\r\n        height: 0,\r\n      }\r\n    }\r\n//  const orgChart = data;\r\n  const containerStyles = {\r\n    width: \"100vw\",\r\n    height: \"100vh\"\r\n  };\r\n  const styles = {\r\n    nodes: {\r\n      node: {\r\n        shape: 'rect',\r\n        shapeProps: {\r\n          width: 200,\r\n          height: 50,\r\n          x: -100,\r\n          y: -25\r\n        },\r\n        textBlock: {\r\n          dy: -20\r\n        }\r\n      }\r\n    }\r\n  }  \r\n  const handleMouseOver = (input,id) => {\r\n    console.log(input);\r\n    console.log(id);\r\n    var myicon = document.getElementById(id);\r\n    var mypopup = document.getElementById(\"mypopup\");    \r\n    var iconPos = myicon.getBoundingClientRect();\r\n    mypopup.style.left = (iconPos.right + 20) + \"px\";\r\n    mypopup.style.top = (window.scrollY + iconPos.top - 60) + \"px\";\r\n    mypopup.style.display = \"block\";    \r\n    document.getElementById(\"svg_content\").innerText = input;\r\n    setTooltipVisible(true);\r\n  };\r\n\r\n  const handleMouseOut = (id) => {\r\n    setTooltipVisible(false);\r\n    var myicon = document.getElementById(id);\r\n    var mypopup = document.getElementById(\"mypopup\");    \r\n    mypopup.style.display = \"none\";    \r\n  };\r\n  const handleNodeClick = (node) => {\r\n    console.log(\"clicked\");\r\n    console.log(node);\r\n    // check if the node has children\r\n    if (node.children && node.children.length >10) {\r\n        setLoadedData([...prevData, ...node.children.slice(0,10)])\r\n      } \r\n  }\r\n  const renderRectSvgNode = ({ nodeDatum, toggleNode }) => {\r\n    let shortText = nodeDatum['name'].substring(0, 30);\r\n    shortText = shortText + '...'\r\n    let type = nodeDatum.type;\r\n    let svg_id = \"svg_id\"+id;\r\n    return (\r\n        type === \"step1\" ? (\r\n          <>\r\n          <g id={svg_id} transform=\"translate(-536 -571)\" >\r\n           <g id=\"Group_5599\" data-name=\"Group 5599\" transform=\"translate(-5 7)\">\r\n             <g width=\"230\" id=\"Rectangle_3512\" data-name=\"Rectangle 3512\" transform=\"translate(541 520)\" fill=\"#141517\" stroke=\"#1993e6\" stroke-width=\"2\" onClick={toggleNode}>\r\n               <rect width=\"200\" height=\"94\" rx=\"13\" stroke=\"none\"/>\r\n               <rect x=\"1\" y=\"1\" width=\"200\" height=\"92\" rx=\"12\" fill=\"none\"/>\r\n             </g>\r\n             <line id=\"Line_329\" data-name=\"Line 329\" x2=\"200\" transform=\"translate(542.5 554.5)\" fill=\"none\" stroke=\"#1993e6\" stroke-width=\"2\"/>\r\n           </g>\r\n           <text id=\"Dasboard\" strokeWidth=\"0\" transform=\"translate(704 608)\" fill=\"#1993e6\" font-size=\"15\" font-family=\"'Rubik', sans-serif\"><tspan x=\"-50\" y=\"0\" stroke='white' onMouseOver={() => handleMouseOver(nodeDatum.name,svg_id)} onMouseOut={() => handleMouseOut(svg_id)} >Read more</tspan></text>\r\n           <text id=\"Dasboard-2\" strokeWidth=\"0\" data-name=\"Dasboard\" transform=\"translate(622 553)\" fill=\"#fff\" font-size=\"21\" font-family=\"'Rubik', sans-serif\"><tspan x=\"-30\" y=\"0\" stroke='white'>ID : R001</tspan></text>\r\n           <text id=\"\" strokeWidth=\"0\" transform=\"translate(546 571)\" fill=\"#fff\" font-size=\"15\" font-family=\"'Rubik', sans-serif\"><tspan x=\"0\" y=\"14\" stroke='white'>{shortText}</tspan></text>\r\n          </g>          \r\n          {id++}\r\n         </>       \r\n        ) : (\r\n          type === \"step2\" ? (\r\n            <>\r\n            <g id={svg_id} transform=\"translate(-536 -571)\" >\r\n            <g id=\"Group_5599\" data-name=\"Group 5599\" transform=\"translate(-5 7)\">\r\n              <g width=\"230\" id=\"Rectangle_3512\" data-name=\"Rectangle 3512\" transform=\"translate(541 520)\" fill=\"#141517\" stroke=\"#1993e6\" stroke-width=\"2\" onClick={toggleNode}>\r\n                <rect width=\"230\" height=\"94\" rx=\"13\" stroke=\"none\"/>\r\n                <rect x=\"1\" y=\"1\" width=\"230\" height=\"92\" rx=\"12\" fill=\"none\"/>\r\n              </g>\r\n              <line id=\"Line_329\" data-name=\"Line 329\" x2=\"230\" transform=\"translate(542.5 554.5)\" fill=\"none\" stroke=\"#1993e6\" stroke-width=\"2\"/>\r\n            </g>\r\n            <text id=\"Dasboard\" strokeWidth=\"0\" transform=\"translate(704 608)\" fill=\"#1993e6\" font-size=\"15\" font-family=\"'Rubik', sans-serif\"><tspan x=\"-20\" y=\"0\" stroke='white' onMouseOver={() => handleMouseOver(nodeDatum.name,svg_id)} onMouseOut={() => handleMouseOut(svg_id)} >Read more</tspan></text>\r\n            <text id=\"Dasboard-2\" strokeWidth=\"0\" data-name=\"Dasboard\" transform=\"translate(622 553)\" fill=\"#fff\" font-size=\"21\" font-family=\"'Rubik', sans-serif\"><tspan x=\"-10\" y=\"0\" stroke='white'>ID : R001</tspan></text>\r\n            <text id=\"\" strokeWidth=\"0\" transform=\"translate(546 571)\" fill=\"#fff\" font-size=\"15\" font-family=\"'Rubik', sans-serif\"><tspan x=\"0\" y=\"14\" stroke='white'>{shortText}</tspan></text>\r\n            </g>          \r\n            {id++}              \r\n            </>\r\n          ) : (\r\n          type === \"step3\" ? (\r\n            <>\r\n              <g id={svg_id} transform=\"translate(-1266.028 -450.689)\" onClick={toggleNode}>\r\n                <g id=\"Rectangle_3715\" data-name=\"Rectangle 3715\" transform=\"translate(1266.028 420.689)\" fill=\"#141517\" stroke=\"#1993e6\" stroke-width=\"2\">\r\n                  <rect width=\"210\" height=\"73\" rx=\"16\" stroke=\"none\"/>\r\n                  <rect x=\"1\" y=\"1\" width=\"210\" height=\"71\" rx=\"15\" fill=\"none\"/>\r\n                </g>\r\n                <text id=\"\" strokeWidth=\"0\" transform=\"translate(1279.461 442.189)\" fill=\"#fff\" font-size=\"15\" font-family=\"'Rubik', sans-serif\"><tspan x=\"0\" y=\"14\" stroke='white'>{shortText}</tspan></text>\r\n                <text id=\"Dasboard\" strokeWidth=\"0\" transform=\"translate(1435.714 478.811)\" fill=\"#1993e6\" font-size=\"15\" font-family=\"'Rubik', sans-serif\"><tspan x=\"-50\" y=\"0\" stroke='white' onMouseOver={() => handleMouseOver(nodeDatum.name,svg_id)} onMouseOut={() => handleMouseOut(svg_id)}>Read more</tspan></text>\r\n              </g>              \r\n              {id++}\r\n            </>\r\n            ) : (\r\n              type === \"step4\" ? (\r\n                <>\r\n                  <g id=\"result\" transform=\"translate(-1644 -445)\">\r\n                    <g id=\"Rectangle_3716\" data-name=\"Rectangle 3716\" transform=\"translate(1644 420)\" fill=\"#141517\" stroke=\"#e50019\" stroke-width=\"2\" onClick={toggleNode}>\r\n                      <rect width=\"136\" height=\"56\" rx=\"9\" stroke=\"none\"/>\r\n                      <rect x=\"1\" y=\"1\" width=\"134\" height=\"54\" rx=\"8\" fill=\"none\"/>\r\n                    </g>\r\n                    <text id=\"Dasboard\" strokeWidth=\"0\" transform=\"translate(1683 461)\" fill=\"red\" font-size=\"21\" font-family=\"'Rubik', sans-serif\"><tspan x=\"0\" y=\"-8\">{shortText}</tspan></text>\r\n                  </g>                  \r\n                </>\r\n              ) : (\r\n                <></>\r\n              )\r\n            )\r\n            )    \r\n        )\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n   }, []);    \r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol xs={12} style={{\"height\":\"1000px\"}}>\r\n          <Tree \r\n          data={loadedData} \r\n          dimensions={dimensions}\r\n          renderCustomNodeElement={renderRectSvgNode}\r\n          orientation=\"horizontal\"        \r\n          styles={styles}         \r\n          nodeSvgShape={svgSquare}\r\n          pathFunc=\"step\"\r\n          translate={translate}\r\n          initialDepth={1}\r\n          onClick={handleNodeClicks}          \r\n          nodeSize={{\r\n            x: 240,\r\n            y: 200\r\n          }}\r\n          separation={{\r\n            siblings: 1,\r\n            nonSiblings: 1\r\n          }}                          \r\n        />        \r\n          <div id=\"mypopup\">\r\n            <p id=\"svg_content\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\r\n          </div>        \r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DashboardTree\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["useState","treedata","loadedData","setLoadedData","loadChildren","node","console","log","children","prevData","id","useCenteredTree","dimensions","translate","handleMouseOver","input","myicon","document","getElementById","mypopup","iconPos","getBoundingClientRect","style","left","right","top","window","scrollY","display","innerText","setTooltipVisible","handleMouseOut","useEffect","axios","auth","username","password","then","response","catch","error","xs","data","renderCustomNodeElement","nodeDatum","toggleNode","shortText","substring","type","svg_id","transform","width","fill","stroke","onClick","height","rx","x","y","x2","strokeWidth","onMouseOver","name","onMouseOut","orientation","styles","nodes","shape","shapeProps","textBlock","dy","nodeSvgShape","pathFunc","initialDepth","nodeSize","separation","siblings","nonSiblings","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2"],"sourceRoot":""}